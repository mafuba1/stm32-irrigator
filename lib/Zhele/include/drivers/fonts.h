/**
 * @file
 * Implements class for Ssd1306 OLED display
 * 
 * @author Alexey Zhelonkin (Fonts author taked from "SSD1306Ascii" library : https://github.com/greiman/SSD1306Ascii/blob/master/src/fonts/)
 * Thank @greiman so much
 * 
 * @date 2021
 * @license FreeBSD
 */

#ifndef ZHELE_DRIVERS_FONTS_H
#define ZHELE_DRIVERS_FONTS_H

#include "../common/template_utils/data_type_selector.h"

namespace Zhele::Drivers
{
    /**
     * @brief Base class for fonts
     * 
     * @tparam _MonoSpace Is font is monospace.
     */
    template <bool _MonoSpace = true>
    class FontBase
    {
    public:
        /**
         * @brief Is font is monospace
         */
        static const bool MonoSpace = _MonoSpace;

        /**
         * @brief Font height.
         */
        static const uint8_t Height;

        /**
         * @brief Returns bytes for given symbol
         * 
         * @param [in] symbol Symbol
         * 
         * @returns Array with bytes for given symbol.
         */
        static const uint8_t* Get(char symbol);
    };

    /**
     * @brief Common template for monospace fonts.
     * 
     * @tparam _Width Width
     * @tparam _Height Height
     * @tparam _AsciiOffset First symbol`s number.
     * @tparam Tag Tag (for support different fonts with same size)
     */
    template <uint8_t _Width, uint8_t _Height, uint8_t _AsciiOffset = 0, typename Tag = void>
    class MonoSpaceFont : public FontBase<>
    {
    public:
        static const uint8_t Width = _Width;
        static const uint8_t Height = _Height;
        static const uint8_t* Get(char symbol)
        {
            return &_data[(symbol - _AsciiOffset) * Width * ((Height + 7) / 8)];
        }
    private:
        static const uint8_t _data[];
    };

    template<uint8_t _Height, uint8_t _AsciiOffset = 0, typename Tag = void>
    class Font : public FontBase<false>
    {
    public:
        static const uint8_t Height = _Height;

        /**
         * @brief Returns width for given symbol
         * 
         * @param [in] symbol Symbol
         * 
         * @returns Symbols`s width.
         */
        static const uint8_t GetWidth(char symbol)
        {
            return _widths[symbol - _AsciiOffset];
        }
        static const uint8_t* Get(char symbol)
        {
            volatile uint16_t offset = 0;
            for(uint16_t i = 0; i < symbol - _AsciiOffset; ++i)
                offset += _widths[i];

            return &_data[offset * ((Height + 7) / 8)];
        }
    private:
        static const uint8_t _widths[];
        static const uint8_t _data[];
    };

    // Monospaced fonts
    using Font5x7 = MonoSpaceFont<5, 7, 32>;
    using Fixed10x15Bold = MonoSpaceFont<10, 15, 32>;

    // Tags for Times new roman
    class TimesNewRoman{}; class TimesNewRomanItalic{}; class TimesNewRomanBold{};
    using TimesNewRoman13 = Font<13, 32, TimesNewRoman>;
    using TimesNewRoman13Italic = Font<13, 32, TimesNewRomanItalic>;

    template<>
    const uint8_t Font5x7::_data[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, // SPACE
        0x00, 0x00, 0x5F, 0x00, 0x00, // !
        0x00, 0x03, 0x00, 0x03, 0x00, // "
        0x14, 0x3E, 0x14, 0x3E, 0x14, // #
        0x24, 0x2A, 0x7F, 0x2A, 0x12, // $
        0x43, 0x33, 0x08, 0x66, 0x61, // %
        0x36, 0x49, 0x55, 0x22, 0x50, // &
        0x00, 0x05, 0x03, 0x00, 0x00, // '
        0x00, 0x1C, 0x22, 0x41, 0x00, // (
        0x00, 0x41, 0x22, 0x1C, 0x00, // )
        0x14, 0x08, 0x3E, 0x08, 0x14, // *
        0x08, 0x08, 0x3E, 0x08, 0x08, // +
        0x00, 0x50, 0x30, 0x00, 0x00, // ,
        0x08, 0x08, 0x08, 0x08, 0x08, // -
        0x00, 0x60, 0x60, 0x00, 0x00, // .
        0x20, 0x10, 0x08, 0x04, 0x02, // /
        0x3E, 0x51, 0x49, 0x45, 0x3E, // 0
        0x00, 0x04, 0x02, 0x7F, 0x00, // 1
        0x42, 0x61, 0x51, 0x49, 0x46, // 2
        0x22, 0x41, 0x49, 0x49, 0x36, // 3
        0x18, 0x14, 0x12, 0x7F, 0x10, // 4
        0x27, 0x45, 0x45, 0x45, 0x39, // 5
        0x3E, 0x49, 0x49, 0x49, 0x32, // 6
        0x01, 0x01, 0x71, 0x09, 0x07, // 7
        0x36, 0x49, 0x49, 0x49, 0x36, // 8
        0x26, 0x49, 0x49, 0x49, 0x3E, // 9
        0x00, 0x36, 0x36, 0x00, 0x00, // :
        0x00, 0x56, 0x36, 0x00, 0x00, // ;
        0x08, 0x14, 0x22, 0x41, 0x00, // <
        0x14, 0x14, 0x14, 0x14, 0x14, // =
        0x00, 0x41, 0x22, 0x14, 0x08, // >
        0x02, 0x01, 0x51, 0x09, 0x06, // ?
        0x3E, 0x41, 0x59, 0x55, 0x5E, // @
        0x7E, 0x09, 0x09, 0x09, 0x7E, // A
        0x7F, 0x49, 0x49, 0x49, 0x36, // B
        0x3E, 0x41, 0x41, 0x41, 0x22, // C
        0x7F, 0x41, 0x41, 0x41, 0x3E, // D
        0x7F, 0x49, 0x49, 0x49, 0x41, // E
        0x7F, 0x09, 0x09, 0x09, 0x01, // F
        0x3E, 0x41, 0x41, 0x49, 0x3A, // G
        0x7F, 0x08, 0x08, 0x08, 0x7F, // H
        0x00, 0x41, 0x7F, 0x41, 0x00, // I
        0x30, 0x40, 0x40, 0x40, 0x3F, // J
        0x7F, 0x08, 0x14, 0x22, 0x41, // K
        0x7F, 0x40, 0x40, 0x40, 0x40, // L
        0x7F, 0x02, 0x0C, 0x02, 0x7F, // M
        0x7F, 0x02, 0x04, 0x08, 0x7F, // N
        0x3E, 0x41, 0x41, 0x41, 0x3E, // O
        0x7F, 0x09, 0x09, 0x09, 0x06, // P
        0x1E, 0x21, 0x21, 0x21, 0x5E, // Q
        0x7F, 0x09, 0x09, 0x09, 0x76, // R
        0x26, 0x49, 0x49, 0x49, 0x32, // S
        0x01, 0x01, 0x7F, 0x01, 0x01, // T
        0x3F, 0x40, 0x40, 0x40, 0x3F, // U
        0x1F, 0x20, 0x40, 0x20, 0x1F, // V
        0x7F, 0x20, 0x10, 0x20, 0x7F, // W
        0x41, 0x22, 0x1C, 0x22, 0x41, // X
        0x07, 0x08, 0x70, 0x08, 0x07, // Y
        0x61, 0x51, 0x49, 0x45, 0x43, // Z
        0x00, 0x7F, 0x41, 0x00, 0x00, // [
        0x02, 0x04, 0x08, 0x10, 0x20, // backslash
        0x00, 0x00, 0x41, 0x7F, 0x00, // ]
        0x04, 0x02, 0x01, 0x02, 0x04, // ^
        0x40, 0x40, 0x40, 0x40, 0x40, // _
        0x00, 0x01, 0x02, 0x04, 0x00, // `
        0x20, 0x54, 0x54, 0x54, 0x78, // a
        0x7F, 0x44, 0x44, 0x44, 0x38, // b
        0x38, 0x44, 0x44, 0x44, 0x44, // c
        0x38, 0x44, 0x44, 0x44, 0x7F, // d
        0x38, 0x54, 0x54, 0x54, 0x18, // e
        0x04, 0x04, 0x7E, 0x05, 0x05, // f
        0x08, 0x54, 0x54, 0x54, 0x3C, // g
        0x7F, 0x08, 0x04, 0x04, 0x78, // h
        0x00, 0x44, 0x7D, 0x40, 0x00, // i
        0x20, 0x40, 0x44, 0x3D, 0x00, // j
        0x7F, 0x10, 0x28, 0x44, 0x00, // k
        0x00, 0x41, 0x7F, 0x40, 0x00, // l
        0x7C, 0x04, 0x78, 0x04, 0x78, // m
        0x7C, 0x08, 0x04, 0x04, 0x78, // n
        0x38, 0x44, 0x44, 0x44, 0x38, // o
        0x7C, 0x14, 0x14, 0x14, 0x08, // p
        0x08, 0x14, 0x14, 0x14, 0x7C, // q
        0x00, 0x7C, 0x08, 0x04, 0x04, // r
        0x48, 0x54, 0x54, 0x54, 0x20, // s
        0x04, 0x04, 0x3F, 0x44, 0x44, // t
        0x3C, 0x40, 0x40, 0x20, 0x7C, // u
        0x1C, 0x20, 0x40, 0x20, 0x1C, // v
        0x3C, 0x40, 0x30, 0x40, 0x3C, // w
        0x44, 0x28, 0x10, 0x28, 0x44, // x
        0x0C, 0x50, 0x50, 0x50, 0x3C, // y
        0x44, 0x64, 0x54, 0x4C, 0x44, // z
        0x00, 0x08, 0x36, 0x41, 0x41, // {
        0x00, 0x00, 0x7F, 0x00, 0x00, // |
        0x41, 0x41, 0x36, 0x08, 0x00, // }
        0x02, 0x01, 0x02, 0x04, 0x02, // ~
        0X7F, 0X7F, 0X7F, 0X7F, 0X7F  // del
    };

    template<>
    const uint8_t Fixed10x15Bold::_data[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // *space*
        0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x19, 0x00, 0x00, 0x00, 0x00,  // !
        0x00, 0x00, 0x1e, 0x1e, 0x00, 0x00, 0x1e, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // "
        0x00, 0x30, 0xfe, 0xfe, 0x30, 0x30, 0xfe, 0xfe, 0x30, 0x00, 0x00, 0x03, 0x1f, 0x1f, 0x03, 0x03, 0x1f, 0x1f, 0x03, 0x00,  // #
        0x00, 0x70, 0xf8, 0xd8, 0xfe, 0x98, 0x98, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x18, 0x18, 0x7f, 0x19, 0x1f, 0x0f, 0x00, 0x00,  // $
        0x1c, 0xb6, 0xa2, 0xf6, 0xcc, 0x60, 0x60, 0x20, 0x30, 0x00, 0x01, 0x01, 0x00, 0x0e, 0x1b, 0x11, 0x1b, 0x0e, 0x00, 0x00,  // %
        0x00, 0x00, 0xdc, 0x7e, 0xe6, 0xc6, 0x86, 0x0c, 0x80, 0x80, 0x00, 0x07, 0x0f, 0x1c, 0x18, 0x19, 0x1f, 0x1e, 0x1f, 0x13,  // &
        0x00, 0x00, 0x00, 0x00, 0x1e, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // '
        0x00, 0x00, 0x00, 0xe0, 0xfc, 0x1e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x3f, 0x78, 0x40, 0x00, 0x00, 0x00,  // (
        0x00, 0x00, 0x02, 0x1e, 0xfc, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x78, 0x3f, 0x07, 0x00, 0x00, 0x00, 0x00,  // )
        0x00, 0x48, 0x78, 0x30, 0xfe, 0x30, 0x78, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // *
        0x00, 0x80, 0x80, 0x80, 0xf0, 0xf0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x01, 0x01, 0x01, 0x0f, 0x0f, 0x01, 0x01, 0x01, 0x00,  // +
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x7c, 0x3c, 0x00, 0x00, 0x00, 0x00,  // ,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00,  // -
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x1c, 0x00, 0x00, 0x00, 0x00,  // .
        0x00, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0x3c, 0x0e, 0x02, 0x00, 0x00, 0x20, 0x38, 0x1e, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00,  // /
        0x00, 0xf0, 0xfc, 0x0e, 0xc6, 0xc6, 0x0e, 0xfc, 0xf8, 0x00, 0x00, 0x03, 0x0f, 0x1c, 0x18, 0x18, 0x1c, 0x0f, 0x07, 0x00,  // 0
        0x00, 0x00, 0x0c, 0x06, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x18, 0x18, 0x18, 0x00,  // 1
        0x00, 0x0c, 0x06, 0x06, 0x06, 0x86, 0xc6, 0x7c, 0x38, 0x00, 0x00, 0x18, 0x1c, 0x1e, 0x1b, 0x19, 0x18, 0x18, 0x18, 0x00,  // 2
        0x00, 0x0c, 0x06, 0xc6, 0xc6, 0xc6, 0xc6, 0xfc, 0x38, 0x00, 0x00, 0x0c, 0x18, 0x18, 0x18, 0x18, 0x19, 0x0f, 0x0f, 0x00,  // 3
        0x00, 0x80, 0xc0, 0x70, 0x18, 0x0e, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x1f, 0x1f, 0x03, 0x00,  // 4
        0x00, 0xfe, 0x7e, 0x66, 0x66, 0x66, 0xe6, 0xc6, 0x80, 0x00, 0x00, 0x0c, 0x18, 0x18, 0x18, 0x18, 0x1c, 0x0f, 0x07, 0x00,  // 5
        0x00, 0xf0, 0xfc, 0xce, 0x66, 0x66, 0xe6, 0xcc, 0x80, 0x00, 0x00, 0x07, 0x0f, 0x1c, 0x18, 0x18, 0x1c, 0x0f, 0x07, 0x00,  // 6
        0x00, 0x06, 0x06, 0x06, 0x06, 0xe6, 0xfe, 0x3e, 0x0e, 0x00, 0x00, 0x00, 0x10, 0x1c, 0x0f, 0x03, 0x00, 0x00, 0x00, 0x00,  // 7
        0x00, 0x38, 0xfc, 0xc6, 0xc6, 0xc6, 0xc6, 0xfc, 0x38, 0x00, 0x00, 0x0f, 0x0f, 0x18, 0x18, 0x18, 0x18, 0x0f, 0x0f, 0x00,  // 8
        0x00, 0x78, 0xfc, 0xce, 0x86, 0x86, 0xce, 0xfc, 0xf8, 0x00, 0x00, 0x00, 0x0c, 0x19, 0x19, 0x19, 0x1c, 0x0f, 0x03, 0x00,  // 9
        0x00, 0x00, 0x00, 0x00, 0xe0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x1c, 0x00, 0x00, 0x00, 0x00,  // :
        0x00, 0x00, 0x00, 0x00, 0xe0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x7c, 0x3c, 0x00, 0x00, 0x00, 0x00,  // ;
        0x00, 0x80, 0x80, 0xc0, 0x40, 0x60, 0x60, 0x20, 0x30, 0x00, 0x00, 0x01, 0x01, 0x03, 0x02, 0x06, 0x06, 0x04, 0x0c, 0x00,  // <
        0x00, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x00,  // =
        0x00, 0x30, 0x20, 0x60, 0x60, 0x40, 0xc0, 0x80, 0x80, 0x00, 0x00, 0x0c, 0x04, 0x06, 0x06, 0x02, 0x03, 0x01, 0x01, 0x00,  // >
        0x00, 0x0c, 0x06, 0x86, 0xc6, 0x66, 0x7e, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00,  // ?
        0xe0, 0xf0, 0x38, 0x9c, 0xcc, 0xcc, 0xdc, 0xf8, 0xf0, 0x00, 0x07, 0x1f, 0x38, 0x73, 0x67, 0x66, 0x66, 0x77, 0x27, 0x00,  // @
        0x00, 0x00, 0xc0, 0xfc, 0x3e, 0x3e, 0xfc, 0xc0, 0x00, 0x00, 0x00, 0x18, 0x1f, 0x0f, 0x03, 0x03, 0x0f, 0x1f, 0x18, 0x00,  // A
        0x00, 0xfe, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0xfc, 0x3c, 0x00, 0x00, 0x1f, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x0f, 0x00,  // B
        0x00, 0xf0, 0xfc, 0x0c, 0x06, 0x06, 0x06, 0x06, 0x0c, 0x00, 0x00, 0x03, 0x0f, 0x0c, 0x18, 0x18, 0x18, 0x18, 0x0c, 0x00,  // C
        0x00, 0xfe, 0xfe, 0x06, 0x06, 0x06, 0x0c, 0xfc, 0xf0, 0x00, 0x00, 0x1f, 0x1f, 0x18, 0x18, 0x18, 0x0c, 0x0f, 0x03, 0x00,  // D
        0x00, 0xfe, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x06, 0x00, 0x00, 0x1f, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00,  // E
        0x00, 0xfe, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x06, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // F
        0x00, 0xf0, 0xfc, 0x0c, 0x06, 0x86, 0x86, 0x86, 0x8c, 0x00, 0x00, 0x03, 0x0f, 0x0c, 0x18, 0x19, 0x19, 0x1f, 0x0f, 0x00,  // G
        0x00, 0xfe, 0xfe, 0xc0, 0xc0, 0xc0, 0xc0, 0xfe, 0xfe, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00,  // H
        0x00, 0x00, 0x06, 0x06, 0xfe, 0xfe, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x1f, 0x1f, 0x18, 0x18, 0x00, 0x00,  // I
        0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x06, 0xfe, 0xfe, 0x00, 0x00, 0x0c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x0f, 0x0f, 0x00,  // J
        0x00, 0xfe, 0xfe, 0xe0, 0xf0, 0xfc, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x03, 0x0f, 0x1e, 0x18, 0x00,  // K
        0x00, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00,  // L
        0x00, 0xfe, 0xfe, 0x3e, 0xf0, 0xf0, 0x3e, 0xfe, 0xfe, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x01, 0x01, 0x00, 0x1f, 0x1f, 0x00,  // M
        0x00, 0xfe, 0xfe, 0x1e, 0xf0, 0xc0, 0x00, 0xfe, 0xfe, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x03, 0x1e, 0x1f, 0x1f, 0x00,  // N
        0x00, 0xf0, 0xfc, 0x0e, 0x06, 0x06, 0x0e, 0xfc, 0xf0, 0x00, 0x00, 0x03, 0x0f, 0x1c, 0x18, 0x18, 0x1c, 0x0f, 0x03, 0x00,  // O
        0x00, 0xfe, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x7c, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // P
        0x00, 0xf0, 0xfc, 0x0e, 0x06, 0x06, 0x0e, 0xfc, 0xf0, 0x00, 0x00, 0x03, 0x0f, 0x1c, 0x18, 0x18, 0x3c, 0x6f, 0x07, 0x00,  // Q
        0x00, 0xfe, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0xfc, 0x3c, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x01, 0x03, 0x1f, 0x1e, 0x10,  // R
        0x00, 0x38, 0x7c, 0xe6, 0xc6, 0xc6, 0xc6, 0x8c, 0x00, 0x00, 0x00, 0x0c, 0x18, 0x18, 0x18, 0x18, 0x19, 0x0f, 0x0f, 0x00,  // S
        0x00, 0x06, 0x06, 0x06, 0xfe, 0xfe, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00,  // T
        0x00, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0x00, 0x00, 0x07, 0x0f, 0x1c, 0x18, 0x18, 0x1c, 0x0f, 0x07, 0x00,  // U
        0x00, 0x06, 0xfe, 0xfc, 0x00, 0x00, 0xfc, 0xfe, 0x06, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x1f, 0x1f, 0x00, 0x00, 0x00,  // V
        0x1e, 0xfe, 0xe0, 0x00, 0xf0, 0xf0, 0x00, 0xe0, 0xfe, 0x1e, 0x00, 0x1f, 0x1f, 0x1e, 0x01, 0x01, 0x1e, 0x1f, 0x1f, 0x00,  // W
        0x00, 0x02, 0x0e, 0x3e, 0xf8, 0xf8, 0x3e, 0x0e, 0x02, 0x00, 0x00, 0x10, 0x1c, 0x1f, 0x03, 0x03, 0x1f, 0x1c, 0x10, 0x00,  // X
        0x02, 0x0e, 0x3e, 0x78, 0xe0, 0xe0, 0x78, 0x3e, 0x0e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00,  // Y
        0x00, 0x06, 0x06, 0x86, 0xc6, 0xf6, 0x7e, 0x1e, 0x0e, 0x00, 0x00, 0x1c, 0x1e, 0x1f, 0x1b, 0x18, 0x18, 0x18, 0x18, 0x00,  // Z
        0x00, 0x00, 0x00, 0xfe, 0xfe, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x40, 0x40, 0x00, 0x00, 0x00,  // [
        0x00, 0x02, 0x0e, 0x38, 0xe0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0e, 0x38, 0x20, 0x00,  // *backslash*
        0x00, 0x00, 0x02, 0x02, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x00,  // ]
        0x10, 0x18, 0x1c, 0x0e, 0x06, 0x0e, 0x1c, 0x18, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ^
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,  // _
        0x00, 0x00, 0x01, 0x03, 0x06, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // `
        0x00, 0x00, 0x60, 0x30, 0xb0, 0xb0, 0xb0, 0xf0, 0xe0, 0x00, 0x00, 0x0e, 0x1f, 0x1b, 0x19, 0x19, 0x0d, 0x1f, 0x1f, 0x00,  // a
        0x00, 0xfe, 0xfe, 0x60, 0x30, 0x30, 0x70, 0xe0, 0xc0, 0x00, 0x00, 0x1f, 0x1f, 0x0c, 0x18, 0x18, 0x1c, 0x0f, 0x07, 0x00,  // b
        0x00, 0xc0, 0xe0, 0x70, 0x30, 0x30, 0x30, 0x30, 0x60, 0x00, 0x00, 0x07, 0x0f, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x0c, 0x00,  // c
        0x00, 0xc0, 0xe0, 0x70, 0x30, 0x30, 0x60, 0xfe, 0xfe, 0x00, 0x00, 0x07, 0x0f, 0x1c, 0x18, 0x18, 0x0c, 0x1f, 0x1f, 0x00,  // d
        0x00, 0xc0, 0xe0, 0xb0, 0xb0, 0xb0, 0xb0, 0xe0, 0xc0, 0x00, 0x00, 0x07, 0x0f, 0x1d, 0x19, 0x19, 0x19, 0x19, 0x0d, 0x00,  // e
        0x00, 0x30, 0x30, 0xfc, 0xfe, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,  // f
        0x00, 0xc0, 0xe0, 0x70, 0x30, 0x30, 0x60, 0xf0, 0xf0, 0x00, 0x00, 0x03, 0x37, 0x6e, 0x6c, 0x6c, 0x66, 0x7f, 0x3f, 0x00,  // g
        0x00, 0xfe, 0xfe, 0x60, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00,  // h
        0x00, 0x00, 0x30, 0x30, 0xf7, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x18, 0x18, 0x18, 0x00,  // i
        0x00, 0x00, 0x30, 0x30, 0xf7, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x60, 0x7f, 0x3f, 0x00, 0x00, 0x00, 0x00,  // j
        0x00, 0xfe, 0xfe, 0x80, 0xe0, 0x70, 0x30, 0x10, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x01, 0x03, 0x07, 0x1e, 0x18, 0x10, 0x00,  // k
        0x00, 0x06, 0x06, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1f, 0x18, 0x18, 0x18, 0x00, 0x00,  // l
        0x00, 0xf0, 0xf0, 0x30, 0xf0, 0xe0, 0x30, 0xf0, 0xe0, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x1f, 0x1f, 0x00, 0x1f, 0x1f, 0x00,  // m
        0x00, 0xf0, 0xf0, 0x60, 0x30, 0x30, 0x30, 0xf0, 0xe0, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00,  // n
        0x00, 0xc0, 0xe0, 0x70, 0x30, 0x30, 0x70, 0xe0, 0xc0, 0x00, 0x00, 0x07, 0x0f, 0x1c, 0x18, 0x18, 0x1c, 0x0f, 0x07, 0x00,  // o
        0x00, 0xf0, 0xf0, 0x60, 0x30, 0x30, 0x70, 0xe0, 0xc0, 0x00, 0x00, 0x7f, 0x7f, 0x06, 0x0c, 0x0c, 0x0e, 0x07, 0x03, 0x00,  // p
        0x00, 0xc0, 0xe0, 0x70, 0x30, 0x30, 0x60, 0xf0, 0xf0, 0x00, 0x00, 0x03, 0x07, 0x0e, 0x0c, 0x0c, 0x06, 0x7f, 0x7f, 0x00,  // q
        0x00, 0x00, 0xf0, 0xf0, 0x60, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // r
        0x00, 0xe0, 0xf0, 0xb0, 0xb0, 0xb0, 0xb0, 0x30, 0x60, 0x00, 0x00, 0x0c, 0x19, 0x19, 0x19, 0x19, 0x1b, 0x1f, 0x0e, 0x00,  // s
        0x00, 0x30, 0x30, 0xfc, 0xfc, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1f, 0x18, 0x18, 0x18, 0x00, 0x00,  // t
        0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x0f, 0x1f, 0x18, 0x18, 0x18, 0x0c, 0x1f, 0x1f, 0x00,  // u
        0x00, 0x30, 0xf0, 0xe0, 0x00, 0x00, 0xe0, 0xf0, 0x30, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x1e, 0x1e, 0x0f, 0x01, 0x00, 0x00,  // v
        0x70, 0xf0, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0xf0, 0x70, 0x00, 0x07, 0x1f, 0x1e, 0x03, 0x03, 0x1e, 0x1f, 0x07, 0x00,  // w
        0x00, 0x10, 0x30, 0xf0, 0xc0, 0xc0, 0xf0, 0x30, 0x10, 0x00, 0x00, 0x10, 0x18, 0x1e, 0x07, 0x07, 0x1e, 0x18, 0x10, 0x00,  // x
        0x00, 0x10, 0xf0, 0xf0, 0x80, 0x00, 0xf0, 0xf0, 0x30, 0x00, 0x00, 0x00, 0x60, 0x63, 0x7f, 0x1f, 0x0f, 0x01, 0x00, 0x00,  // y
        0x00, 0x30, 0x30, 0x30, 0x30, 0xb0, 0xf0, 0x70, 0x30, 0x00, 0x00, 0x18, 0x1c, 0x1e, 0x1b, 0x19, 0x18, 0x18, 0x18, 0x00,  // z
        0x00, 0x00, 0x00, 0x00, 0xfc, 0xfe, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x3e, 0x7e, 0x40, 0x40, 0x00, 0x00,  // {
        0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x00,  // |
        0x00, 0x00, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x7e, 0x3e, 0x01, 0x01, 0x00, 0x00,  // }
        0x00, 0x80, 0xc0, 0xc0, 0xc0, 0x80, 0x80, 0x80, 0xc0, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,  // ~
    };

    template<>
    const uint8_t TimesNewRoman13::_widths[] = {
        0x02, 0x01, 0x03, 0x06, 0x05, 0x09, 0x09, 0x01, 0x03, 0x03, 
        0x05, 0x07, 0x02, 0x03, 0x01, 0x03, 0x05, 0x03, 0x05, 0x05, 
        0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x01, 0x02, 0x06, 0x06, 
        0x06, 0x04, 0x0A, 0x08, 0x07, 0x07, 0x08, 0x07, 0x06, 0x08, 
        0x08, 0x03, 0x04, 0x08, 0x07, 0x0B, 0x08, 0x08, 0x06, 0x08, 
        0x08, 0x05, 0x07, 0x08, 0x07, 0x0B, 0x08, 0x08, 0x07, 0x03, 
        0x03, 0x02, 0x06, 0x06, 0x02, 0x05, 0x05, 0x04, 0x06, 0x04, 
        0x04, 0x05, 0x06, 0x03, 0x02, 0x06, 0x03, 0x09, 0x06, 0x05, 
        0x06, 0x06, 0x04, 0x04, 0x03, 0x06, 0x06, 0x09, 0x05, 0x07, 
        0x05, 0x03, 0x01, 0x03, 0x05, 0x06
    };

    template<>
    const uint8_t TimesNewRoman13::_data[] = {
        0x00, 0x00, 0x00, 0x00, // 0x20 <space>
        0xFE, 0x10, // 33
        0x0E, 0x00, 0x0E, 0x00, 0x00, 0x00, // 34
        0xD0, 0x78, 0x56, 0x50, 0xF8, 0x56, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, // 35
        0x1C, 0x12, 0xFF, 0x22, 0xC4, 0x08, 0x10, 0x38, 0x10, 0x08, // 36
        0x0C, 0x12, 0x8C, 0x40, 0x30, 0x08, 0x86, 0x40, 0x80, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x08, 0x10, 0x08, // 37
        0xC0, 0x20, 0x3C, 0xD2, 0x8A, 0x46, 0x30, 0x10, 0x00, 0x08, 0x10, 0x10, 0x10, 0x08, 0x10, 0x10, 0x10, 0x08, // 38
        0x0E, 0x00, // 39
        0xF0, 0x0C, 0x02, 0x08, 0x30, 0x40, // 40
        0x02, 0x0C, 0xF0, 0x40, 0x30, 0x08, // 41
        0x14, 0x08, 0x3E, 0x08, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, // 42
        0x20, 0x20, 0x20, 0xFC, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // 43
        0x00, 0x00, 0x50, 0x30, // 44
        0x80, 0x80, 0x80, 0x00, 0x00, 0x00, // 45
        0x00, 0x10, // 46
        0x00, 0xF8, 0x06, 0x18, 0x00, 0x00, // 47
        0xFC, 0x02, 0x02, 0x02, 0xFC, 0x08, 0x10, 0x10, 0x10, 0x08, // 48
        0x04, 0xFE, 0x00, 0x10, 0x18, 0x10, // 49
        0x04, 0x02, 0x82, 0x42, 0x3C, 0x10, 0x18, 0x10, 0x10, 0x18, // 50
        0x04, 0x02, 0x22, 0x32, 0xCC, 0x10, 0x10, 0x10, 0x10, 0x08, // 51
        0xC0, 0xA0, 0x98, 0x84, 0xFE, 0x80, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, // 52
        0x00, 0x0C, 0x0A, 0x12, 0xE2, 0x10, 0x10, 0x10, 0x08, 0x00, // 53
        0xF0, 0x28, 0x14, 0x12, 0xE2, 0x08, 0x10, 0x10, 0x10, 0x08, // 54
        0x04, 0x02, 0x02, 0xF2, 0x0E, 0x00, 0x00, 0x18, 0x00, 0x00, // 55
        0x8C, 0x52, 0x22, 0x52, 0x8C, 0x08, 0x10, 0x10, 0x10, 0x08, // 56
        0x3C, 0x42, 0x42, 0xC2, 0x7C, 0x10, 0x10, 0x08, 0x00, 0x00, // 57
        0x10, 0x10, // 58
        0x10, 0x00, 0x50, 0x30, // 59
        0x20, 0x50, 0x50, 0x50, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 60
        0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 61
        0x88, 0x88, 0x50, 0x50, 0x50, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 62
        0x0C, 0xC2, 0x22, 0x1C, 0x00, 0x10, 0x00, 0x00, // 63
        0xF0, 0x08, 0xE4, 0x12, 0x0A, 0x0A, 0x92, 0x7A, 0x04, 0xF8, 0x18, 0x20, 0x48, 0x90, 0x90, 0x88, 0x88, 0x90, 0x48, 0x20, // 64
        0x00, 0x80, 0x78, 0x46, 0x58, 0x60, 0x80, 0x00, 0x10, 0x18, 0x10, 0x00, 0x00, 0x10, 0x18, 0x10, // 65
        0x02, 0xFE, 0x22, 0x22, 0x22, 0x3C, 0xC0, 0x10, 0x18, 0x10, 0x10, 0x10, 0x10, 0x08, // 66
        0xF8, 0x04, 0x02, 0x02, 0x02, 0x04, 0x8E, 0x00, 0x08, 0x10, 0x10, 0x10, 0x08, 0x00, // 67
        0x02, 0xFE, 0x02, 0x02, 0x02, 0x02, 0x04, 0xF8, 0x10, 0x18, 0x10, 0x10, 0x10, 0x10, 0x08, 0x00, // 68
        0x02, 0xFE, 0x22, 0x22, 0x72, 0x06, 0x00, 0x10, 0x18, 0x10, 0x10, 0x10, 0x10, 0x08, // 69
        0x02, 0xFE, 0x22, 0x22, 0x72, 0x06, 0x10, 0x18, 0x10, 0x00, 0x00, 0x00, // 70
        0xF8, 0x04, 0x02, 0x02, 0x02, 0x24, 0xEE, 0x20, 0x00, 0x08, 0x10, 0x10, 0x10, 0x10, 0x08, 0x00, // 71
        0x02, 0xFE, 0x22, 0x20, 0x20, 0x22, 0xFE, 0x02, 0x10, 0x18, 0x10, 0x00, 0x00, 0x10, 0x18, 0x10, // 72
        0x02, 0xFE, 0x02, 0x10, 0x18, 0x10, // 73
        0x00, 0x02, 0xFE, 0x02, 0x18, 0x10, 0x08, 0x00, // 74
        0x02, 0xFE, 0x22, 0x50, 0x88, 0x06, 0x02, 0x02, 0x10, 0x18, 0x10, 0x00, 0x00, 0x18, 0x10, 0x10, // 75
        0x02, 0xFE, 0x02, 0x00, 0x00, 0x00, 0x00, 0x10, 0x18, 0x10, 0x10, 0x10, 0x10, 0x08, // 76
        0x02, 0xFE, 0x06, 0x18, 0xE0, 0x00, 0xE0, 0x18, 0x06, 0xFE, 0x02, 0x10, 0x18, 0x10, 0x00, 0x00, 0x18, 0x00, 0x00, 0x10, 0x18, 0x10, // 77
        0x02, 0xFE, 0x08, 0x10, 0x60, 0x82, 0xFE, 0x02, 0x10, 0x18, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, // 78
        0xF8, 0x04, 0x02, 0x02, 0x02, 0x02, 0x04, 0xF8, 0x00, 0x08, 0x10, 0x10, 0x10, 0x10, 0x08, 0x00, // 79
        0x02, 0xFE, 0x22, 0x22, 0x22, 0x1C, 0x10, 0x18, 0x10, 0x00, 0x00, 0x00, // 80
        0xF8, 0x04, 0x02, 0x02, 0x02, 0x02, 0x04, 0xF8, 0x00, 0x08, 0x10, 0x10, 0x30, 0x50, 0x48, 0x40, // 81
        0x02, 0xFE, 0x22, 0x22, 0xE2, 0x1C, 0x00, 0x00, 0x10, 0x18, 0x10, 0x00, 0x00, 0x08, 0x10, 0x10, // 82
        0x0C, 0x12, 0x22, 0x22, 0xC6, 0x18, 0x10, 0x10, 0x10, 0x08, // 83
        0x06, 0x02, 0x02, 0xFE, 0x02, 0x02, 0x06, 0x00, 0x00, 0x10, 0x18, 0x10, 0x00, 0x00, // 84
        0x02, 0xFE, 0x02, 0x00, 0x00, 0x02, 0xFE, 0x02, 0x00, 0x08, 0x10, 0x10, 0x10, 0x10, 0x08, 0x00, // 85
        0x02, 0x1E, 0xE2, 0x00, 0xE2, 0x1E, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, // 86
        0x02, 0x1E, 0xE2, 0x80, 0x62, 0x1E, 0xE2, 0x80, 0x72, 0x0E, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, // 87
        0x02, 0x06, 0x8A, 0x70, 0x70, 0x8A, 0x06, 0x02, 0x10, 0x18, 0x10, 0x00, 0x00, 0x10, 0x18, 0x10, // 88
        0x02, 0x06, 0x3A, 0xC0, 0x30, 0x0A, 0x06, 0x02, 0x00, 0x00, 0x10, 0x18, 0x10, 0x00, 0x00, 0x00, // 89
        0x00, 0x86, 0x42, 0x32, 0x0A, 0x06, 0x82, 0x10, 0x18, 0x10, 0x10, 0x10, 0x10, 0x18, // 90
        0xFE, 0x02, 0x02, 0x78, 0x40, 0x40, // 91
        0x06, 0xF8, 0x00, 0x00, 0x00, 0x18, // 92
        0x02, 0xFE, 0x40, 0x78, // 93
        0x10, 0x0C, 0x02, 0x02, 0x0C, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 94
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, // 95
        0x04, 0x08, 0x00, 0x00, // 96
        0xA0, 0x50, 0x50, 0xE0, 0x00, 0x08, 0x10, 0x10, 0x18, 0x10, // 97
        0xFE, 0x20, 0x10, 0x10, 0xE0, 0x08, 0x10, 0x10, 0x10, 0x08, // 98
        0xE0, 0x10, 0x10, 0x30, 0x08, 0x10, 0x10, 0x08, // 99
        0xE0, 0x10, 0x10, 0x22, 0xFE, 0x00, 0x08, 0x10, 0x10, 0x08, 0x18, 0x10, // 100
        0xE0, 0x50, 0x50, 0x60, 0x08, 0x10, 0x10, 0x08, // 101
        0x10, 0xFC, 0x12, 0x02, 0x10, 0x18, 0x10, 0x00, // 102
        0x60, 0x90, 0x90, 0x70, 0x10, 0x68, 0x90, 0x90, 0x90, 0x60, // 103
        0x02, 0xFE, 0x20, 0x10, 0xE0, 0x00, 0x10, 0x18, 0x10, 0x00, 0x18, 0x10, // 104
        0x10, 0xF2, 0x00, 0x10, 0x18, 0x10, // 105
        0x10, 0xF2, 0x80, 0x78, // 106
        0x02, 0xFE, 0x40, 0xB0, 0x10, 0x00, 0x10, 0x18, 0x10, 0x00, 0x18, 0x10, // 107
        0x02, 0xFE, 0x00, 0x10, 0x18, 0x10, // 108
        0x10, 0xF0, 0x20, 0x10, 0xE0, 0x20, 0x10, 0xE0, 0x00, 0x10, 0x18, 0x10, 0x00, 0x18, 0x10, 0x00, 0x18, 0x10, // 109
        0x10, 0xF0, 0x20, 0x10, 0xE0, 0x00, 0x10, 0x18, 0x10, 0x00, 0x18, 0x10, // 110
        0xE0, 0x10, 0x10, 0x10, 0xE0, 0x08, 0x10, 0x10, 0x10, 0x08, // 111
        0x10, 0xF0, 0x20, 0x10, 0x10, 0xE0, 0x80, 0xF8, 0x88, 0x10, 0x10, 0x08, // 112
        0xE0, 0x10, 0x10, 0x20, 0xF0, 0x00, 0x08, 0x10, 0x10, 0x88, 0xF8, 0x80, // 113
        0x10, 0xF0, 0x20, 0x10, 0x10, 0x18, 0x10, 0x00, // 114
        0x60, 0x50, 0x90, 0xB0, 0x18, 0x10, 0x10, 0x08, // 115
        0x10, 0xFC, 0x10, 0x00, 0x18, 0x10, // 116
        0x10, 0xF0, 0x00, 0x10, 0xF0, 0x00, 0x00, 0x08, 0x10, 0x10, 0x18, 0x10, // 117
        0x30, 0xD0, 0x00, 0xC0, 0x30, 0x10, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, // 118
        0x10, 0xF0, 0x00, 0x90, 0xF0, 0x10, 0xC0, 0x30, 0x10, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, // 119
        0x10, 0x30, 0xC0, 0x30, 0x10, 0x10, 0x18, 0x00, 0x18, 0x10, // 120
        0x10, 0x70, 0x90, 0x00, 0xD0, 0x30, 0x10, 0x80, 0x80, 0x48, 0x30, 0x08, 0x00, 0x00, // 121
        0x30, 0x10, 0xD0, 0x30, 0x10, 0x10, 0x18, 0x10, 0x10, 0x18, // 122
        0x40, 0xBC, 0x02, 0x00, 0x38, 0x40, // 123
        0xFE, 0x78, // 124
        0x02, 0xBC, 0x40, 0x40, 0x38, 0x00, // 125
        0x80, 0x40, 0xC0, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, // 126
        0xFC, 0x04, 0x04, 0x04, 0x04, 0xFC, 0x18, 0x10, 0x10, 0x10, 0x10, 0x18 // 127
    };

    template<>
    const uint8_t TimesNewRoman13Italic::_widths[] = {
        0x03, 0x03, 0x05, 0x06, 0x06, 0x0A, 0x09, 0x01, 0x03, 0x03, 
        0x04, 0x07, 0x01, 0x03, 0x01, 0x03, 0x05, 0x04, 0x05, 0x05, 
        0x05, 0x06, 0x05, 0x05, 0x06, 0x06, 0x02, 0x03, 0x06, 0x06, 
        0x06, 0x05, 0x0A, 0x07, 0x07, 0x07, 0x09, 0x07, 0x07, 0x08, 
        0x09, 0x04, 0x05, 0x08, 0x06, 0x0A, 0x08, 0x08, 0x07, 0x09, 
        0x07, 0x06, 0x06, 0x07, 0x06, 0x09, 0x07, 0x05, 0x07, 0x04, 
        0x01, 0x05, 0x05, 0x06, 0x02, 0x05, 0x05, 0x04, 0x06, 0x04, 
        0x03, 0x06, 0x05, 0x02, 0x03, 0x06, 0x03, 0x08, 0x05, 0x05, 
        0x05, 0x05, 0x04, 0x04, 0x03, 0x05, 0x05, 0x07, 0x05, 0x04, 
        0x04, 0x04, 0x01, 0x04, 0x06, 0x06, 
    };

    template<>
    const uint8_t TimesNewRoman13Italic::_data[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x20 <space>
        0x00, 0xE0, 0x1E, 0x10, 0x00, 0x00, // 33
        0x0E, 0x02, 0x00, 0x0E, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // 34
        0x50, 0xF0, 0x5E, 0x50, 0xF0, 0x5E, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, // 35
        0x80, 0x0C, 0xD2, 0x3E, 0xC3, 0x04, 0x08, 0x30, 0x18, 0x10, 0x08, 0x00, // 36
        0x1C, 0x12, 0x12, 0x8E, 0x60, 0x30, 0x88, 0x44, 0x42, 0xC0, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x18, 0x10, 0x10, 0x08, // 37
        0xC0, 0x20, 0x20, 0xFC, 0x12, 0x8A, 0x66, 0x20, 0x20, 0x08, 0x10, 0x10, 0x10, 0x08, 0x10, 0x10, 0x10, 0x00, // 38
        0x0E, 0x00, // 39
        0xE0, 0x38, 0x04, 0x38, 0x40, 0x00, // 40
        0x00, 0x82, 0xFC, 0x30, 0x08, 0x00, // 41
        0x14, 0x18, 0x3E, 0x18, 0x00, 0x00, 0x00, 0x00, // 42
        0x20, 0x20, 0x20, 0xFC, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // 43
        0x00, 0x30, // 44
        0x80, 0x80, 0x80, 0x00, 0x00, 0x00, // 45
        0x00, 0x10, // 46
        0x80, 0x70, 0x0C, 0x08, 0x00, 0x00, // 47
        0xF0, 0x0C, 0x02, 0x82, 0x7C, 0x08, 0x10, 0x10, 0x08, 0x00, // 48
        0x00, 0x00, 0xFA, 0x06, 0x10, 0x18, 0x10, 0x00, // 49
        0x00, 0x84, 0x42, 0x22, 0x1C, 0x18, 0x10, 0x10, 0x18, 0x00, // 50
        0x00, 0x24, 0x22, 0xD2, 0x0E, 0x10, 0x10, 0x10, 0x08, 0x00, // 51
        0xC0, 0xA0, 0x98, 0xF4, 0x8E, 0x00, 0x00, 0x18, 0x00, 0x00, // 52
        0x00, 0x00, 0x0C, 0x0A, 0xF2, 0x02, 0x18, 0x10, 0x10, 0x08, 0x00, 0x00, // 53
        0xE0, 0x18, 0x14, 0x12, 0xE2, 0x08, 0x10, 0x10, 0x08, 0x00, // 54
        0x04, 0x82, 0x62, 0x1A, 0x06, 0x10, 0x08, 0x00, 0x00, 0x00, // 55
        0x80, 0x40, 0x2C, 0x32, 0xD2, 0x0C, 0x08, 0x10, 0x10, 0x10, 0x08, 0x00, // 56
        0x00, 0x38, 0x44, 0x42, 0xE2, 0x3C, 0x10, 0x10, 0x10, 0x08, 0x00, 0x00, // 57
        0x00, 0x10, 0x10, 0x00, // 58
        0x00, 0x00, 0x10, 0x40, 0x30, 0x00, // 59
        0x40, 0xA0, 0xA0, 0xA0, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, // 60
        0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 61
        0x10, 0x10, 0xA0, 0xA0, 0xA0, 0x40, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, // 62
        0x0C, 0xC2, 0x22, 0x12, 0x0C, 0x10, 0x00, 0x00, 0x00, 0x00, // 63
        0xE0, 0x18, 0xC4, 0x36, 0x0A, 0x8A, 0x72, 0x0A, 0x84, 0xF8, 0x18, 0x20, 0x58, 0x90, 0x88, 0x98, 0x90, 0x50, 0x28, 0x20, // 64
        0x00, 0xC0, 0x60, 0x58, 0x44, 0xFE, 0x00, 0x18, 0x10, 0x00, 0x00, 0x10, 0x18, 0x10, // 65
        0x80, 0x7A, 0x26, 0x22, 0x22, 0xD2, 0x0C, 0x18, 0x10, 0x10, 0x10, 0x10, 0x08, 0x00, // 66
        0xF0, 0x08, 0x04, 0x02, 0x02, 0x02, 0x0C, 0x00, 0x08, 0x10, 0x10, 0x10, 0x10, 0x08, // 67
        0x00, 0x00, 0xFA, 0x06, 0x02, 0x02, 0x02, 0x84, 0x78, 0x10, 0x18, 0x10, 0x10, 0x10, 0x10, 0x08, 0x00, 0x00, // 68
        0x00, 0x00, 0xFA, 0x26, 0x62, 0x32, 0x06, 0x10, 0x18, 0x10, 0x10, 0x10, 0x08, 0x00, // 69
        0x00, 0x00, 0xFA, 0x26, 0x62, 0x32, 0x02, 0x10, 0x18, 0x10, 0x00, 0x00, 0x00, 0x00, // 70
        0xF0, 0x0C, 0x04, 0x02, 0x22, 0xA2, 0x6C, 0x26, 0x00, 0x08, 0x10, 0x10, 0x10, 0x18, 0x00, 0x00, // 71
        0x00, 0x00, 0xFA, 0x26, 0x22, 0x20, 0x20, 0xFA, 0x06, 0x10, 0x18, 0x10, 0x00, 0x00, 0x10, 0x18, 0x10, 0x00, // 72
        0x00, 0x00, 0xFA, 0x06, 0x10, 0x18, 0x10, 0x00, // 73
        0x00, 0x00, 0x80, 0x7A, 0x06, 0x10, 0x10, 0x08, 0x00, 0x00, // 74
        0x00, 0x00, 0xFA, 0x66, 0x92, 0x08, 0x06, 0x02, 0x10, 0x18, 0x10, 0x00, 0x10, 0x18, 0x10, 0x10, // 75
        0x00, 0x00, 0xFA, 0x06, 0x02, 0x00, 0x10, 0x18, 0x10, 0x10, 0x10, 0x18, // 76
        0x00, 0x00, 0xFA, 0x0E, 0xF0, 0x80, 0x60, 0x18, 0xFC, 0x06, 0x10, 0x18, 0x10, 0x00, 0x18, 0x00, 0x10, 0x18, 0x10, 0x00, // 77
        0x00, 0x02, 0xF2, 0x0E, 0x38, 0xC0, 0x00, 0xFA, 0x10, 0x18, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, // 78
        0xE0, 0x18, 0x04, 0x02, 0x02, 0x02, 0xC2, 0x3C, 0x08, 0x10, 0x10, 0x10, 0x10, 0x08, 0x00, 0x00, // 79
        0x00, 0x00, 0xFA, 0x26, 0x22, 0x22, 0x1C, 0x10, 0x18, 0x10, 0x00, 0x00, 0x00, 0x00, // 80
        0x00, 0xE0, 0x18, 0x04, 0x02, 0x02, 0x02, 0xC2, 0x3C, 0x80, 0xC8, 0xB8, 0x90, 0x90, 0x90, 0x88, 0x40, 0x00, // 81
        0x00, 0x00, 0xFA, 0x26, 0xE2, 0x22, 0x1C, 0x10, 0x18, 0x10, 0x00, 0x00, 0x18, 0x10, // 82
        0x00, 0x80, 0x1C, 0x22, 0xC2, 0x0C, 0x18, 0x08, 0x10, 0x10, 0x08, 0x00, // 83
        0x06, 0x02, 0xF2, 0x0E, 0x02, 0x02, 0x10, 0x18, 0x10, 0x00, 0x00, 0x00, // 84
        0xFA, 0x06, 0x02, 0x00, 0x00, 0xFA, 0x06, 0x08, 0x10, 0x10, 0x10, 0x08, 0x00, 0x00, // 85
        0xC2, 0x3E, 0x82, 0x60, 0x10, 0x0A, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, // 86
        0xE2, 0x1E, 0xC2, 0x30, 0xEA, 0x1E, 0xC2, 0x30, 0x0A, 0x18, 0x08, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x00, // 87
        0x00, 0x80, 0x42, 0x3E, 0xD2, 0x0A, 0x06, 0x18, 0x10, 0x00, 0x10, 0x18, 0x10, 0x00, // 88
        0x02, 0xDE, 0x22, 0x18, 0x06, 0x10, 0x18, 0x10, 0x00, 0x00, // 89
        0x00, 0x04, 0xC2, 0x22, 0x12, 0x0E, 0x02, 0x10, 0x18, 0x10, 0x10, 0x10, 0x18, 0x00, // 90
        0x00, 0xE0, 0x1E, 0x02, 0x60, 0x58, 0x40, 0x00, // 91
        0xFE, 0x18, // 92
        0x00, 0x00, 0x82, 0x7A, 0x06, 0x40, 0x40, 0x38, 0x00, 0x00, // 93
        0x20, 0x18, 0x04, 0x18, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // 94
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, // 95
        0x02, 0x04, 0x00, 0x00, // 96
        0xC0, 0x20, 0x10, 0x90, 0x70, 0x18, 0x10, 0x08, 0x18, 0x10, // 97
        0x80, 0x7A, 0x26, 0x10, 0xF0, 0x08, 0x10, 0x10, 0x08, 0x00, // 98
        0xC0, 0x20, 0x10, 0x30, 0x08, 0x10, 0x10, 0x08, // 99
        0xC0, 0x20, 0x10, 0x90, 0xFA, 0x06, 0x18, 0x10, 0x08, 0x18, 0x10, 0x00, // 100
        0xC0, 0xA0, 0x90, 0x70, 0x18, 0x10, 0x10, 0x08, // 101
        0x10, 0xF8, 0x14, 0x38, 0x00, 0x00, // 102
        0x00, 0xE0, 0x90, 0x90, 0x70, 0x10, 0xE0, 0x98, 0x90, 0xA0, 0x60, 0x00, // 103
        0x00, 0xFA, 0x26, 0x10, 0xF0, 0x18, 0x00, 0x00, 0x18, 0x10, // 104
        0xF0, 0x04, 0x10, 0x00, // 105
        0x90, 0x70, 0x04, 0x38, 0x00, 0x00, // 106
        0x00, 0xFA, 0xC6, 0x30, 0x10, 0x10, 0x18, 0x00, 0x08, 0x10, 0x08, 0x00, // 107
        0x80, 0x7A, 0x06, 0x18, 0x10, 0x00, // 108
        0x10, 0xF0, 0x20, 0x10, 0xF0, 0x20, 0x10, 0xF0, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x10, // 109
        0x10, 0xF0, 0x20, 0x10, 0xF0, 0x18, 0x00, 0x00, 0x18, 0x10, // 110
        0xC0, 0x20, 0x10, 0x10, 0xE0, 0x08, 0x10, 0x10, 0x08, 0x00, // 111
        0x10, 0xF0, 0x20, 0x10, 0xF0, 0xF8, 0x90, 0x10, 0x08, 0x00, // 112
        0xC0, 0x20, 0x10, 0x10, 0xF0, 0x18, 0x90, 0xC8, 0xB8, 0x00, // 113
        0x10, 0xF0, 0x20, 0x30, 0x18, 0x00, 0x00, 0x00, // 114
        0x00, 0x20, 0x50, 0x90, 0x18, 0x10, 0x10, 0x08, // 115
        0x90, 0x78, 0x14, 0x18, 0x10, 0x00, // 116
        0x90, 0x70, 0x00, 0x80, 0x70, 0x18, 0x10, 0x10, 0x18, 0x10, // 117
        0x10, 0xE0, 0x00, 0x80, 0x70, 0x00, 0x18, 0x08, 0x00, 0x00, // 118
        0x10, 0xF0, 0x80, 0x40, 0xF0, 0x00, 0xF0, 0x00, 0x18, 0x00, 0x00, 0x18, 0x08, 0x00, // 119
        0x00, 0x10, 0xF0, 0x20, 0x10, 0x10, 0x08, 0x00, 0x18, 0x00, // 120
        0x10, 0xF0, 0x00, 0xF0, 0x60, 0x18, 0x08, 0x00, // 121
        0x00, 0xB0, 0x50, 0x30, 0x18, 0x10, 0x10, 0x18, // 122
        0x40, 0xA0, 0x1C, 0x02, 0x70, 0x98, 0x00, 0x00, // 123
        0xFE, 0x78, // 124
        0x00, 0x00, 0x72, 0x9C, 0x80, 0x70, 0x08, 0x00, // 125
        0xC0, 0x40, 0x40, 0x80, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 126
        0xFC, 0x04, 0x04, 0x04, 0x04, 0xFC, 0x18, 0x10, 0x10, 0x10, 0x10, 0x18 // 127
    };
}

#endif //! ZHELE_DRIVERS_FONTS_H